1 网络攻防的一些概念

    渗透测试




2 环境
    

    攻击机
    靶机
    检测系统、防御系统  IDS/IPS
    网络设备连接



3 安全的定义 4大特性
    机密性
        要规范系统读的权限
        不允许非授权人员读取一些信息

    完整性
        控制系统的写权限
        不允许非授权人修改和删除


    可用性
        保证系统的服务是可用的，经受得起攻击测试


    可追朔性
        有非法行为可以监测追朔



4 补充命令

    whoami
        确定当前用户是谁

    id
        id 用户名
            查看某个用户的id，包括用户id，组id等等...


            -g 
                输出组id
            -G
                输出所有的组ID




    useradd 
        要使用root权限来创建用户 （sudo)

        -m 表示一同创建home目录
        -s 指定用户默认的shell （用户登录后的第一条命令）

        useradd -m -s /bin/bash test01



    userdel
        删除某个用户

        userdel -r 用户名

            -r 表示一起删除home目录下面的文件



    passwd 用户名
        修改某个用户的密码


    usermod 
        一般常用于修改用户所在组

        -G group1 gourp2 ... 修改用户当前所在哪个组

        -aG group1 group2 ... 将当前用户追加到哪些组





5 关于权限的基础

    系统访问权限的概念 (许可位以及ugo)
        ls -l 查看某个目录下的文件以及权限

        -rw-rw-r--  1 itcast itcast   55 10月  7 01:41 readme

                       主人    哪个组                     文件名 

        三组权限

            主人权限(属主)  u
                第一个 rw- 表示主人的权限   三个权限都打开就是rwx ，某个权限没打开就用-表示
                可读、可写、不可执行

            属组权限     g
                第二个 rw- 表示数组权限
                可读可写不可执行


            其他用户权限   o
                第三个 r-- 表示其他人的权限

                可读、不可写、不可执行



    使用chmod命令来调整某个文件的许可位

        chmod (a|u|g|o)(+|-)(r|w|x) 文件名

            a 表示所有

        比如用户许可位添加w权限

            chmod u+w 文件名



        权限还可以使用数字来表示，每个rwx都换为二进制
        有权限的那位标识为1，没有权限就标识为0

            rwx -->  111  -->  十进制的 7
            rw- -->  110  -->  6
            -w- -->  010  -->  2


        chmod 777 文件名
            将某个文件的所有许可位全部置为1，所有权限打开
                rwx rwx rwx





6 关于许可位的第4个组(理应该是排第一)

    跟其他组 ugo 一样也有3位，分别是

        SUID  SGID  Sticky
          0     0      1


        SUID SGID Sticky  | r w x | r w x | r w x


    linux中，默认创建一个目录权限是 775，创建一个文件默认是664

    目录的w权限有什么用？
        控制某个用户有没有权限去修改目录的结构
            创文件，删文件,创目录

    目录的x权限有什么作用？
        会影响目录变更，cd权限，为了不影响目录的使用，一般都要给目录x权限



    给予某个用户某个目录的w权限，他才能够创建文件，但是同时也能够删除其他人的文件

    需求：用户有目录的w权限，但是只能删除自己的文件而不能删除别人的文件

        解决方案就是设置粘着位 sticky 
        只要将粘着位设置为1，那么只能删除自己的文件而不能删除别人的文件(目录属主除外)
            黏着位只对目录生效


    如何设置，还是使用chmod

        chmod 1777  目录名
        设置成功后 ls -l 看到目录的权限变化
        drwxrwxrwt 2 itcast itcast 4096 10月 25 23:55 ./

            o组的x权限变成了t  


    SUID   set-user-id
        设置可执行程序，不管哪个用户只要有执行权限，启动这个程序的时候
            进程会自己设置uid为这个文件的属主


        chmod 4755 nginx 
            让nginx启动的时候，自己以root用户来启动，不用sudo



    SGID   set-group-id
        设置可执行程序，不管哪个用户只要有执行权限，启动这个程序的时候
            进程会自己设置uid为这个文件的属组

7 acl的使用
    设置acl能够让某个用户有权限去访问某个文件

    setfacl -m (类型):(名称):rwx（权限)  文件名

        类型：
            u:  对某个用户设置访问权限
            g:  对某个组设置访问权限
            m:  对mask设置 


    需求：对test01用户  设置 itcast.txt 文件的可读权限

        setfacl -m u:test01:r  itcast.txt

        设置acl之后对文件查看 ls -l
        -rw-rw----+ 1 itcast itcast    6 10月 26 00:35 itcast.txt
                多了一个+号
                如果看到+，设置了acl，权限不能单纯的看ugo 三个组

                只要有其他用户的权限或者mask，ls都会显示有+



    查询文件的acl
        getfacl  文件名

        # file: itcast.txt     文件名
        # owner: itcast        文件主人
        # group: itcast        属组  
        user::rw-              属主的权限  
        user:test01:r--        用户test01的权限  
        group::rw-             同一个组的其他用户的权限 
        mask::rw-              掩码     
        other::---             其他用户的权限跟ls -l 对应      


    移除acl的权限

        setfacl -x (u|g|m):(用户名|组名|空白) 文件名

        setfacl -x u:test01  itcast.txt




8 权限的判断顺序
    
    没有ACL的情况下:
    1 判断是不是这个文件的主人
        是：应用 user的权限

    2 判断是不是文件同组其他用户
        是：应用group的权限

    3 其他情况应用other的权限


    有acl的情况下
    1 判断是不是这个文件的主人
        是：应用 user的权限

    2 判断ACL里边user项有没有当前用户
        有：应用该ACL选项的权限
            受限于mask


    3 判断组以及acl的group项
        有：应用group的权限
            受限于mask

    4 其他情况应用other的权限



9 acl中mask的作用

    最终acl的权限会受限于mask，做一个按位与的计算，得出最终某个用户某个组拥有的权限

        # file: itcast.txt                               
        # owner: itcast                                  
        # group: itcast                                  
        user::r--                                        
        user:test01:rwx                 #effective:r--   生效是r--
        user:test02:rwx                 #effective:r--   
        group::-w-                      #effective:---   
        mask::r--                                        
        other::---                                       





10 文件属性

    chattr +|-|= 文件属性 文件名|目录名

        + 追加属性
        - 移除属性
        = 当做赋值


    因为操作比较底层，敏感，要使用root权限
    添加了文件属性之后，对root用户也同样生效,

    root用户想要删除这些文件，必须先将文件属性修改回来




11 root用户

    root用户也是操作系统最大的后门
    目前对于防御的讨论都是建立在对方没有root权限的前提上




12 对运维有什么指导意义
    
    项目二云盘
        如果服务器被入侵是必然事件，如何防御？


        可执行程序（fastCGI）、脚本、动态库
            防止被串改，被删除
            控制ugo 权限+acl ，限制其他用户访问或者修改

            一个fastCGI一个用户来启动
            如果某个服务器fastCGI有漏洞被攻破了，黑客也只能
            拿到这个启动用户的权限

        配置文件
            防止修改

        代码
            敏感，代码不允许放在生产环境服务器上,除非是解析性的代码
            python/php/java ，严格控制读权限，可修改权限




        日志
            对服务器做暴力破解，dos攻击等,日志有记录，黑客可以改日志
            掩盖他的行为,可以控制日志只能以追加的方式进行修改

            更多情况下还是控制写权限


    最终服务器权限受控制，会导致合法用户使用不方便

    计算机的安全性和易用性是违背的































